version: '3.8'

services:
  angular:
    build:
      context: ./web/product-app  # Replace with the actual path to your Angular project directory
      dockerfile: Dockerfile  # Specify the name of your Dockerfile if it's not named "Dockerfile"
    container_name: product-app
    ports:
      - "80:80"  # Expose Angular development server port
    # working_dir: /app
    # command: ["npm", "start"]  # Adjust the start command as needed
    # volumes:
    #   - ./web/product-app:/app  # Mount your Angular project directory into the container
    depends_on:
      - api  # Optionally, if you have a backend API service

  api:
    build:
      context: ./api/after-sale-api  # Replace with the actual path to your project directory
      dockerfile: Dockerfile  # Specify the name of your Dockerfile if it's not named "Dockerfile"
    container_name: after-sale-api
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/aftersaledb
      - SPRING_DATASOURCE_USERNAME=dcs
      - SPRING_DATASOURCE_PASSWORD=P@ssword
    depends_on:
      - postgres
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  postgres:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_DB: aftersaledb
      POSTGRES_USER: dcs
      POSTGRES_PASSWORD: P@ssword
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  # sonarscanner:
  #   image: sonarsource/sonar-scanner-cli
  #   environment:
  #     - SONAR_HOST_URL=http://10.9.50.224:9000
  #     - SONAR_LOGIN=admin
  #     - SONAR_PASSWORD=P@ssw0rd
  #     - SONAR_PROJECT_BASE_DIR=/api
  #   volumes:
  #     - ./api/after-sale-api:/api  # Replace with the actual path to your project directory